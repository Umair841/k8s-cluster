version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=020046395185.dkr.ecr.eu-central-1.amazonaws.com/sample
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"app","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo here actual code is working.
      - echo this is post-build stage to upgrade helm on k8s CLuster .
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl && openssl sha1 -sha256 kubectl && chmod +x ./kubectl && mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - mkdir ~/.kube
      - aws s3 cp s3://umair-k8s-kops-store/config .
      - cp config ~/.kube/
      - OUTPUT=$(pwd)
      - cd /usr/local/bin && PATH=$PATH:/usr/local/bin && curl -sSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - cd $OUTPUT/Helmchart/
      - helm upgrade demo .
      - echo successfully upgraded helm to new version with latest image
artifacts:
  files:
    - imagedefinitions.json
